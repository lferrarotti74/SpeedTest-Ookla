name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. v6.12-r0)'
        required: true
      force:
        description: 'Force overwrite if tag exists'
        required: false
        default: 'false'
      dry_run:
        description: 'Dry-run mode (no archive, no push)'
        required: false
        default: 'false'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Validate inputs
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+(-r[0-9]+)?$ ]]; then
            echo "❌ Invalid version format. Use vX.Y or vX.Y-rZ."
            exit 1
          fi

      - name: Check for uncommitted changes
        run: |
          if ! git diff --quiet || ! git diff --cached --quiet; then
            echo "❌ There are uncommitted changes. Commit or stash them first."
            exit 1
          fi

      - name: Check for unpushed commits
        run: |
          git fetch origin
          if [ "$(git rev-parse HEAD)" != "$(git rev-parse origin/$(git rev-parse --abbrev-ref HEAD))" ]; then
            echo "❌ Local branch is out of sync with remote. Push or pull first."
            exit 1
          fi

      - name: Check for uncommitted submodule changes
        run: |
          if [ -n "$(git submodule foreach --quiet 'git diff --quiet || echo $path')" ]; then
            echo "❌ There are uncommitted changes in submodules."
            exit 1
          fi

      - name: Check if tag already exists
        run: |
          TAG="${{ github.event.inputs.version }}"
          FORCE="${{ github.event.inputs.force }}"
          git fetch --tags
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            if [ "$FORCE" != "true" ]; then
              echo "❌ Tag '$TAG' already exists. Use force=true to overwrite."
              exit 1
            else
              echo "⚠ Force mode: deleting existing tag '$TAG'."
              git tag -d "$TAG" || true
              git push origin ":refs/tags/$TAG" || true
            fi
          fi

      - name: Dry-run info
        if: github.event.inputs.dry_run == 'true'
        run: |
          echo "🛠 Dry-run mode enabled — will NOT create archive or push tag."
          echo "Would create release for tag: ${{ github.event.inputs.version }}"
          exit 0

      - name: Create tag
        run: |
          TAG="${{ github.event.inputs.version }}"
          git tag "$TAG"
          git push origin "$TAG"

      - name: Create release archive
        run: |
          TAG="${{ github.event.inputs.version }}"
          PREFIX="project-${TAG}/"
          mkdir -p release
          git archive --format=tar.gz --prefix="$PREFIX" HEAD \
            -- . ':!*.git*' '.github' > "release/${TAG}.tar.gz"
          git archive --format=zip --prefix="$PREFIX" HEAD \
            -- . ':!*.git*' '.github' > "release/${TAG}.zip"

      - name: Upload release archive to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: |
            release/${{ github.event.inputs.version }}.tar.gz
            release/${{ github.event.inputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
